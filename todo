- mod review to use signals
- work on profile
- desktop site support
- mod dreambox to use example data
- create server summarization engine

- design


m9 - feed is rewritten to use Signal
m10 - feed is css changed to support desktop better




m2 - resource rendered from firebase test data
m3 - resource outcomes indicator with one label rendered
m5 - ResourceOutcomesIndicator supports other outcomes indicator and ResourceOtherOutcomesListView
m6 - ResourceOutcomeLabel supports IndividualReview and blank states, with question mark etc
m7 - ResourceOutcomeLabel and IndividualReview are used in the review
m8 - it's possible to review the resource yourself from a link in the ResourceOutcomeLabel / ResourceOtherOutcomesListView

m11 -


## FE

OutcomeLabel
  - resource
  - outcome
  - outcome_fullfillment_space (best_url, best_time_cost, best_dollar_cost, best_success_percent)
  - individual_review  (user, resource, engagement, (outcome -> report))

* widgets
    * ResourceView
      * ResourceOutcomesIndicator(Resource)
        * ResourceOutcomeLabel
          (Resource, GoalOpportuntySpace, IndividualReview)
          (Resource, GoalOpportuntySpace)
          (Resource, Outcome)  (renders as questionmark)
          * ResourceOutcomeInfoView
        * ResourceOtherOutcomesListView


* fn: annotate_resources(product_selector, indicator_div_selector)

* site
    * Profile
    * RecentlyReviewedFeed
    * TopicManager

## API
- index_best_solution_per_goal
  - least time w. >75% sucess
  - or least time w. >40% success

## Tag management
- fns: merge(), kindof()
- tables: terms(name, tid), tags(tid, canonical_name, merged_to, merged_from)



- add autocomplete for better resource, better activity/outcome/ethic

- for thermometer:
  - less than 50%, gray on good side, and a very light red for the bad side
  - greater than or equal to 50%, green on good side, and gray on the bad side




in feed
  - display reviewer faces as part of feed
  - in feed, add in current users review as happy faces / sad faces after counts



- (10m) kill slider?
- editable 'bought' and '1 month ago'
- (20m) better canonicalization (http/https?)
- (2h) server guesses good outcome tags after you've added an activity
- process URLs!!!    nxhx.org/vreview/?url=facebook.com;did=visit;at=928173918723;for=30m

---

- integrate tokenfield (below)
- design firebase stores for migration data

---


- integrate http://sliptree.github.io/bootstrap-tokenfield/
- make a tokenview that can ask for just activities, outcomes, ethics, autocomplete, and takes a callback for reporting the data into firebase
- figure out where to stash the migration data in firebase


MIGRATIONS TO STORE
  - within outcome
    - activity migration
    - resource migration
  - within activity
    - best for getting started
  - activity to activity, irrespective of outcomes (??)
  - outcome to outcome
  - ethic to ethic

----

activity, bad:
  - other activity for same goals?

activity, good:
  - another product helped you get started?

outcome, bad:
  - are you still into this outcome?
    y:
      - another activity has helped?
      - another resource has helped?
    n:
      - what outcomes are more important to you now?

outcome, good:
  "yay!"

ethic, good:
  "Yay!"

ethic bad:
  - are you still into this ethic?
    y:
      - text string? "what have you learned?"
    n:
      - new ethics?
